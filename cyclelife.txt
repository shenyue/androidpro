####返回栈（Back Stack）
>安卓中Activity是重叠的，没启动一个新的活动，就覆盖在原活动之上。
>安卓使用Task管理活动，一个任务就是一组活动的集合，这个栈称之为返回栈。
>栈是一种先进先出的数据结构。每新启动一个活动则入栈顶，返回时，将栈顶的活动移除，则之前的活动处于栈顶。

####活动状态
- **运行状态：**当活动处于栈顶时，进入活动状态。
- **暂停状态：**当活动不处于栈顶，但还可见时，处于暂停状态。
- **停止状态：**当活动不在栈顶，完全不可见时，处于停止状态。
- **销毁状态：**当一个活动在返回栈中被移除时，就变成了销毁状态。

####活动的生命周期
以下7个方法，除了onRestart()，都是两两相对的。
- **onCreate()：**活动第一次创建时被调用。在此完成活动初始化，如加载布局，绑定事件。
- **onStart()：**活动由不可见变为可见时调用。
- **onResume()：**活动准备好和用户交互时调用，此时活动一定处于返回栈栈顶，处于活动状态。
- **onPause()：**系统准备去启动或者恢复一个活动时调用。通常在此将耗费CPU的资源释放掉，以及保存一些关键数据，但这个方法执行速度一定要快，否则影响新的栈顶活动的使用。
- **onStop()：**在活动不可见时调用。如果启动一个对话框式的活动，onPause()会执行，而onStop()不会执行。
- **onDestroy()：**活动被销毁之前调用，状态变为销毁状态。
- **onRestart()：**活动由停止变为运行之前调用，也就是活动被重新启动了。

![活动生命周期](https://upload-images.jianshu.io/upload_images/15047809-8733c999e5a4aa83.png?imageMogr2/auto-orient/strip)

####3种生存期
- **完整生存期：** 从 onCreate() 到 onDestroy() 之间所经历的。
- **可见生存期：** 从 onStart() 到 onStop() 之间所经历的。
- **前台生存期：** 从 onResume() 到 onPause() 之间所经历的。

####活动被回收时怎么办
**onSaveInstanceState()：**重写此方法，在其中对数据进行保存。此方法在活动被回收之前一定会调用。
```
// 获取活动销毁之前的数据
if (savedInstanceState != null) {
    String data = savedInstanceState.getString("key");
}

// 活动销毁之前保存数据
@Override
protected void onSaveInstanceState(Bundle outState) {
    super.onSaveInstanceState(outState);

    String data= "我被无情的回收了";
    outState.putString("key", data);
}
```

####对话框式互动
**android:theme** 设置activity标签的theme属性为**Theme.AppCompat.Dialog**。
```
<activity android:name=".chapter02.CycleLifeDialogActivity"
    android:theme="@style/Theme.AppCompat.Dialog" />
```

####代码示例
---
*activity_cyclelife_one.xml*
```
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".chapter02.CycleLifeOneActivity"
    android:orientation="vertical">

    <ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:scrollbars="vertical">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <Button
                android:id="@+id/btn_goto_cl_two"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="进入第二个Activity" />

            <Button
                android:id="@+id/btn_goto_cl_dialog"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="打开 Dialog" />

            <TextView
                android:id="@+id/tv_cyclelifeinfo_1"
                android:layout_width="match_parent"
                android:layout_height="wrap_content" />

        </LinearLayout>
    </ScrollView>

</LinearLayout>
```

---
*CycleLifeOneActivity.java*
```
public class CycleLifeOneActivity extends MyBaseActivity {

    TextView tv_cyclelifeinfo;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cyclelife_one);

        // 活动被迫被回收时，恢复数据
        if (savedInstanceState != null) {
            String tempData = savedInstanceState.getString("gc_data");
            // 使用此数据恢复原貌
        }

        tv_cyclelifeinfo = findViewById(R.id.tv_cyclelifeinfo_1);

        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().textView = tv_cyclelifeinfo;
        BLUtils.shareInstance().setTVText();

        // 进入下一个活动
        Button btn_goto_cltwo = findViewById(R.id.btn_goto_cl_two);
        btn_goto_cltwo.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(CycleLifeOneActivity.this, CycleLifeTwoActivity.class);
                startActivityForResult(intent, 1);
            }
        });

        // 打开对话框
        Button btn_goto_cl_dialog = findViewById(R.id.btn_goto_cl_dialog);
        btn_goto_cl_dialog.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(CycleLifeOneActivity.this, CycleLifeDialogActivity.class);
                startActivity(intent);
            }
        });

    }

    @Override
    protected void onStart() {
        super.onStart();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onResume() {
        super.onResume();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onPause() {
        super.onPause();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onStop() {
        super.onStop();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onRestart() {
        super.onRestart();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().textView = tv_cyclelifeinfo;
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);

        String tempData = "我被无情的回收了";
        outState.putString("gc_data", tempData);
    }
}
```

---
*activity_cyclelife_two.xml*
```
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".chapter02.CycleLifeTwoActivity"
    android:orientation="vertical">

    <ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:scrollbars="vertical">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <TextView
                android:id="@+id/tv_cyclelifeinfo_2"
                android:layout_width="match_parent"
                android:layout_height="wrap_content" />

            <Button
                android:id="@+id/btn_back_cl_one"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="返回" />

        </LinearLayout>
    </ScrollView>

</LinearLayout>
```

--
*CycleLifeTwoActivity.java*
```
public class CycleLifeTwoActivity extends AppCompatActivity {

    TextView tv_cyclelifeInfo;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cyclelife_two);

        tv_cyclelifeInfo = findViewById(R.id.tv_cyclelifeinfo_2);

        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().textView = tv_cyclelifeInfo;
        BLUtils.shareInstance().setTVText();

        Button btn_back = findViewById(R.id.btn_back_cl_one);
        btn_back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

    @Override
    protected void onStart() {
        super.onStart();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onResume() {
        super.onResume();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onPause() {
        super.onPause();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onStop() {
        super.onStop();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().setTVText();
    }

    @Override
    protected void onRestart() {
        super.onRestart();
        BLUtils.shareInstance().addValueForKey(this.getClass().getSimpleName()
                , Thread.currentThread().getStackTrace()[2].getMethodName());
        BLUtils.shareInstance().textView = tv_cyclelifeInfo;
        BLUtils.shareInstance().setTVText();
    }
}

```

---





